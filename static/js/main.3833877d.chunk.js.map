{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","Profile","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setnewDisplayName","getMyNweets","a","q","query","collection","where","uid","orderBy","getDocs","forEach","doc","console","log","id","data","onSubmit","e","preventDefault","updateProfile","currentUser","then","catch","err","useEffect","className","type","placeholder","value","onChange","target","autoFocus","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","result","credentialFromResult","GithubAuthProvider","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","src","alt","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","faUser","Router","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAmBAA,YAVuB,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAMF,IAAMM,EAAcC,cACdC,EAAYC,cACZC,EAAiBC,c,uBC4DfC,EAtEC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACpBC,EAAUC,cAChB,EAA4CC,mBAASJ,EAAQK,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAOMC,EAAW,uCAAG,4BAAAC,EAAA,6DACZC,EAAIC,YACRC,YAAWjB,EAAW,UACtBkB,YAAM,YAAa,KAAMb,EAAQc,KACjCC,YAAQ,cAJQ,SAMUC,YAAQN,GANlB,cAOJO,SAAQ,SAACC,GACrBC,QAAQC,IAAIF,EAAIG,GAAI,OAAQH,EAAII,WARhB,2CAAH,qDAmBXC,EAAQ,uCAAG,WAAOC,GAAP,SAAAf,EAAA,yDACfe,EAAEC,iBACEzB,EAAQK,cAAgBC,EAFb,gCAGPoB,YAAcjC,EAAYkC,YAAa,CAC3CtB,YAAaC,IAEZsB,MAAK,kBAAM3B,OACX4B,OAAM,SAACC,GAAD,OAASX,QAAQC,IAAIU,MAPjB,2CAAH,sDAed,OAJAC,qBAAU,WACRvB,MACC,IAGD,sBAAKwB,UAAU,YAAf,UACE,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACE,uBACEC,KAAK,OACLC,YAAY,eACZC,MAAO7B,EACP8B,SA7BS,SAACZ,GAChB,IACYW,EACRX,EADFa,OAAUF,MAEZ5B,EAAkB4B,IA0BZH,UAAU,YACVM,WAAS,IAEX,uBACEL,KAAK,SACLE,MAAM,iBACNH,UAAU,UACVO,MAAO,CACLC,UAAW,SAIjB,sBAAMR,UAAU,2BAA2BS,QA3DzB,WACpBhD,EAAYiD,UACZxC,EAAQyC,KAAK,MAyDX,yBCOSC,EA5EE,WACf,MAA0BxC,mBAAS,IAAnC,mBAAOyC,EAAP,KAAcC,EAAd,KACA,EAAgC1C,mBAAS,IAAzC,mBAAO2C,EAAP,KAAiBC,EAAjB,KACA,EAAoC5C,oBAAS,GAA7C,mBAAO6C,EAAP,KAAmBC,EAAnB,KACA,EAA0B9C,mBAAS,IAAnC,mBAAO+C,EAAP,KAAcC,EAAd,KAEMhB,EAAW,SAACZ,GAChB,MAEIA,EADFa,OAAUgB,EADZ,EACYA,KAAMlB,EADlB,EACkBA,MAGL,UAATkB,EACFP,EAASX,GACS,aAATkB,GACTL,EAAYb,IAIVZ,EAAQ,uCAAG,WAAOC,GAAP,eAAAf,EAAA,yDACfe,EAAEC,iBADa,UAITwB,EAJS,gCAKEK,YACX7D,EACAoD,EACAE,GARS,OAKXzB,EALW,+CAWEiC,YAA2B9D,EAAaoD,EAAOE,GAXjD,QAWXzB,EAXW,eAabH,QAAQC,IAAIE,GAbC,kDAeb8B,EAAS,KAAMI,SAfF,0DAAH,sDAuBd,OACE,qCACE,uBAAMjC,SAAUA,EAAUS,UAAU,YAApC,UACE,uBACEqB,KAAK,QACLpB,KAAK,OACLC,YAAY,QACZC,MAAOU,EACPT,SAAUA,EACVJ,UAAU,YACVyB,UAAQ,IAEV,uBACEJ,KAAK,WACLpB,KAAK,WACLC,YAAY,WACZC,MAAOY,EACPX,SAAUA,EACVJ,UAAU,YACVyB,UAAQ,IAEV,uBACExB,KAAK,SACLE,MAAOc,EAAa,iBAAmB,SACvCjB,UAAU,4BAGbmB,GAAS,sBAAMnB,UAAU,YAAhB,SAA6BmB,IACvC,sBAAMV,QAhCY,WACpBS,GAAc,SAACQ,GAAD,OAAWA,MA+BO1B,UAAU,aAAxC,SACGiB,EAAa,UAAY,uB,gBCxBnBU,EAtCF,WACX,IAAMC,EAAa,uCAAG,WAAOpC,GAAP,qBAAAf,EAAA,yDAKP,YAHD4C,EACR7B,EADFa,OAAUgB,MAFQ,uBAMlBQ,EAAW,IAAIC,IANG,SAOGC,YAAgBtE,EAAaoE,GAPhC,OAOZG,EAPY,OAQlBF,IAAmBG,qBAAqBD,GARtB,0BASA,WAATX,EATS,wBAUlBQ,EAAW,IAAIK,IAVG,UAWGH,YAAgBtE,EAAaoE,GAXhC,QAWZG,EAXY,OAYlBE,IAAmBD,qBAAqBD,GAZtB,4CAAH,sDAgBnB,OACE,sBAAKhC,UAAU,gBAAf,UACE,cAAC,IAAD,CACEmC,KAAMC,IACNC,MAAO,UACPC,KAAK,KACL/B,MAAO,CAAEgC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKvC,UAAU,WAAf,UACE,yBAAQS,QAASmB,EAAeP,KAAK,SAASrB,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBmC,KAAMK,SAE9C,yBAAQ/B,QAASmB,EAAeP,KAAK,SAASrB,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBmC,KAAMM,gB,wBCmCvCC,EAzED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAA8BxE,oBAAS,GAAvC,mBAAOyE,EAAP,KAAgBC,EAAhB,KACA,EAAgC1E,mBAASuE,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,sBAAAzE,EAAA,0DACT0E,OAAOC,QAAQ,+CADN,gCAGZC,YAAUnE,YAAIvB,EAAD,iBAAsBgF,EAAStD,MAHhC,uBAIZiE,YAAaC,YAAI1F,EAAgB8E,EAASa,gBAJ9B,2CAAH,qDAQbC,EAAgB,WACpBX,GAAW,SAACpB,GAAD,OAAWA,MAGlBnC,EAAQ,uCAAG,WAAOC,GAAP,SAAAf,EAAA,6DACfe,EAAEC,iBADa,SAETiE,YAAUxE,YAAIvB,EAAD,iBAAsBgF,EAAStD,KAAO,CACvD0D,KAAMC,IAHO,OAKfF,GAAW,GALI,2CAAH,sDAed,OACE,qBAAK9C,UAAU,QAAf,SACG6C,EACC,qCACE,uBAAMtD,SAAUA,EAAUS,UAAU,sBAApC,UACE,uBACEC,KAAK,OACLE,MAAO6C,EACP9C,YAAY,kBACZE,SAhBK,SAACZ,GAChB,IACYW,EACRX,EADFa,OAAUF,MAEZ8C,EAAY9C,IAaFG,WAAS,EACTmB,UAAQ,EACRzB,UAAU,cAEZ,uBAAOC,KAAK,SAASE,MAAM,eAAeH,UAAU,eAEtD,sBAAMS,QAASgD,EAAezD,UAAU,oBAAxC,uBAKF,qCACE,6BAAK2C,EAASI,OACbJ,EAASa,eACR,qBAAKG,IAAKhB,EAASa,cAAeI,IAAI,KAGvChB,GACC,sBAAK5C,UAAU,iBAAf,UACE,sBAAMS,QAASyC,EAAf,SACE,cAAC,IAAD,CAAiBf,KAAM0B,QAEzB,sBAAMpD,QAASgD,EAAf,SACE,cAAC,IAAD,CAAiBtB,KAAM2B,iB,QC2CxBC,EA1GM,SAAC,GAAiB,IAAf/F,EAAc,EAAdA,QACtB,EAA0BI,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KACA,EAAoC7F,mBAAS,IAA7C,mBAAO8F,EAAP,KAAmBC,EAAnB,KAEM5E,EAAQ,uCAAG,WAAOC,GAAP,qBAAAf,EAAA,yDACD,KAAVuF,EADW,oDAIfxE,EAAEC,iBACE+D,EAAgB,GACD,KAAfU,EANW,wBAOPE,EAAgBb,YAAI1F,EAAD,UAAoBG,EAAQc,IAA5B,YAAmCuF,gBAP/C,SAQUC,YACrBF,EACAF,EACA,YAXW,cAQPK,EARO,iBAaSC,YAAeD,EAAShB,KAbjC,QAabC,EAba,sBAeTb,EAAW,CACfI,KAAMiB,EACNS,UAAWC,KAAKC,MAChBC,UAAW5G,EAAQc,IACnB0E,iBAnBa,oBAsBQqB,YAAOjG,YAAWjB,EAAW,UAAWgF,GAtBhD,kEAwBbxD,QAAQC,IAAR,MAxBa,QA0Bf6E,EAAS,IACTE,EAAc,IA3BC,2DAAH,sDAwDd,OACE,uBAAM5E,SAAUA,EAAUS,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,sBACVG,MAAO6D,EACP5D,SAhCS,SAACZ,GAChB,IACYW,EACRX,EADFa,OAAUF,MAEZ8D,EAAS9D,IA6BHF,KAAK,OACLC,YAAY,uBACZ4E,UAAW,MAEb,uBAAO7E,KAAK,SAASE,MAAM,SAASH,UAAU,2BAEhD,wBAAO+E,QAAQ,cAAc/E,UAAU,sBAAvC,UACE,8CACA,cAAC,IAAD,CAAiBmC,KAAM6C,SAEzB,uBACE3F,GAAG,cACHY,KAAK,OACLgF,OAAO,UACP7E,SAxCe,SAACZ,GACpB,IAGM0F,EADF1F,EADFa,OAAU8E,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBvD,EACfuD,EADFC,cAAiBxD,OAEnBmC,EAAcnC,IAEhBoD,EAAOK,cAAcP,IA6BjB3E,MAAO,CACLmF,QAAS,KAGb,uBAAOzF,KAAK,SAASE,MAAM,UAC1B+D,GACC,sBAAKlE,UAAU,0BAAf,UACE,qBACE2D,IAAKO,EACL3D,MAAO,CACLoF,gBAAiBzB,GAEnBN,IAAI,KAEN,sBAAK5D,UAAU,qBAAqBS,QAxClB,WACxB0D,EAAc,KAuCR,UACE,0CACA,cAAC,IAAD,CAAiBhC,KAAMyD,gBCtEpBC,EA9BF,SAAC,GAAiB,IAAf7H,EAAc,EAAdA,QACd,EAA4BI,mBAAS,IAArC,mBAAO0H,EAAP,KAAeC,EAAf,KAaA,OAXAhG,qBAAU,WACR,IAAMrB,EAAIC,YAAMC,YAAWjB,EAAW,WACtCqI,YAAWtH,GAAG,SAACuH,GACb,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAClH,GAAD,oBACnCG,GAAIH,EAAIG,IACLH,EAAII,WAETyG,EAAUG,QAEX,IAGD,sBAAKlG,UAAU,YAAf,UACE,cAAC,EAAD,CAAchC,QAASA,IACvB,qBAAKuC,MAAO,CAAEC,UAAW,IAAzB,SACGsF,EAAOM,KAAI,SAACpC,GAAD,OACV,cAAC,EAAD,CAEErB,SAAUqB,EACVpB,QAASoB,EAAMY,YAAc5G,EAAQc,KAFhCkF,EAAM3E,aCIRgH,EAxBI,SAAC,GAAiB,IAAfrI,EAAc,EAAdA,QACpB,OACE,8BACE,qBAAIuC,MAAO,CAAE+F,QAAS,OAAQC,eAAgB,SAAU/F,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAMgG,GAAG,IAAIjG,MAAO,CAAEkG,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiBtE,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAG7D,6BACE,eAAC,IAAD,CAAMkE,GAAG,UAAUxG,UAAU,UAA7B,UACE,cAAC,IAAD,CAAiBmC,KAAMuE,IAAQrE,MAAO,UAAWC,KAAK,OACtD,sBAAM/B,MAAO,CAAEC,UAAW,IAA1B,SACGxC,EAAQK,YAAR,UACML,EAAQK,YADd,kBAEG,uBCuBHsI,EArCA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAY5I,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACrC,OACE,eAAC,IAAD,WACG2I,GAAc,cAAC,EAAD,CAAY5I,QAASA,IACpC,cAAC,IAAD,UACG4I,EACC,sBACErG,MAAO,CACLsG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRvG,UAAW,GACX8F,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMjJ,QAASA,MAEjB,cAAC,IAAD,CAAOgJ,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASjJ,QAASA,EAASC,YAAaA,MAE1C,cAAC,IAAD,CAAUiJ,KAAK,IAAIV,GAAG,SAGxB,qCACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUC,KAAK,IAAIV,GAAG,eCWnBW,MA3Cf,WACE,MAAwB/I,oBAAS,GAAjC,mBAAOgJ,EAAP,KAAaC,EAAb,KACA,EAA8BjJ,mBAAS,MAAvC,mBAAOJ,EAAP,KAAgBsJ,EAAhB,KA0BA,OAfAvH,qBAAU,WACRtC,EAAY8J,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACTnJ,YAAamJ,EAAKnJ,YAClBS,IAAK0I,EAAK1I,IACVY,cAAe,SAAC+H,GAAD,OAAUD,EAAK9H,cAAc+H,KAGnC,MAEbJ,GAAQ,QAET,IAGD,mCACGD,EACC,cAAC,EAAD,CACER,WAAYc,QAAQ1J,GACpBA,QAASA,EACTC,YA9BY,WAClB,IAAMuJ,EAAO/J,EAAYkC,YACzB2H,EAAW,CACTjJ,YAAamJ,EAAKnJ,YAClBS,IAAK0I,EAAK1I,IACVY,cAAe,SAAC+H,GAAD,OAAUD,EAAK9H,cAAc+H,SA4B1C,qB,MCpCRE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3833877d.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import { authService } from 'fbase';\r\nimport { useHistory } from 'react-router';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from '@firebase/firestore';\r\nimport { updateProfile } from '@firebase/auth';\r\nimport { dbService } from 'fbase';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setnewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const q = query(\r\n      collection(dbService, 'nweets'),\r\n      where('creatorId', '==', userObj.uid),\r\n      orderBy('createdAt')\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      console.log(doc.id, ' => ', doc.data());\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setnewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n      })\r\n        .then(() => refreshUser())\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          className=\"formInput\"\r\n          autoFocus\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n          required\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? 'Create Account' : 'Log In'}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n      </form>\r\n      {error && <span className=\"authError\">{error}</span>}\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService } from 'fbase';\r\nimport React from 'react';\r\nimport {\r\n  GithubAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from 'firebase/auth';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new GoogleAuthProvider();\r\n      const result = await signInWithPopup(authService, provider);\r\n      GoogleAuthProvider.credentialFromResult(result);\r\n    } else if (name === 'github') {\r\n      provider = new GithubAuthProvider();\r\n      const result = await signInWithPopup(authService, provider);\r\n      GithubAuthProvider.credentialFromResult(result);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from 'fbase';\r\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\r\nimport { deleteObject, ref } from '@firebase/storage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n      await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              value={newNweet}\r\n              placeholder=\"Edit your Nweet\"\r\n              onChange={onChange}\r\n              autoFocus\r\n              required\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} alt=\"\" />\r\n          )}\r\n\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from 'react';\r\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { addDoc, collection } from 'firebase/firestore';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n\r\n  const onSubmit = async (e) => {\r\n    if (nweet === '') {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        'data_url'\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    try {\r\n      const docRef = await addDoc(collection(dbService, 'nweets'), nweetObj);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setNweet('');\r\n    setAttachment('');\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      <input type=\"submit\" value=\"nweet\" />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from 'fbase';\r\nimport { onSnapshot, query, collection } from 'firebase/firestore';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(dbService, 'nweets'));\r\n    onSnapshot(q, (snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"profile\" className=\"navLink\">\r\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : 'Profile'}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst Router = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <HashRouter>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: '100%',\r\n              margin: '0 auto',\r\n              marginTop: 80,\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { useEffect, useState } from 'react';\nimport Router from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <Router\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        'Initializing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}